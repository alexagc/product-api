document.querySelector('mutation-test-report-app').report = {"files":{"/Users/alex/projects/own/node/product-api/app/product/domain.js":{"language":"javascript","mutants":[{"id":"0","location":{"end":{"column":32,"line":1},"start":{"column":23,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"1","location":{"end":{"column":2,"line":6},"start":{"column":32,"line":3}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"3","location":{"end":{"column":2,"line":11},"start":{"column":40,"line":8}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"2","location":{"end":{"column":52,"line":4},"start":{"column":41,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"4","location":{"end":{"column":2,"line":16},"start":{"column":33,"line":13}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"5","location":{"end":{"column":42,"line":14},"start":{"column":36,"line":14}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"6","location":{"end":{"column":55,"line":14},"start":{"column":44,"line":14}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"7","location":{"end":{"column":23,"line":15},"start":{"column":10,"line":15}},"mutatorName":"BinaryExpression","replacement":"product && {}","status":"Killed"},{"id":"8","location":{"end":{"column":23,"line":15},"start":{"column":10,"line":15}},"mutatorName":"ConditionalExpression","replacement":"false","status":"Killed"},{"id":"9","location":{"end":{"column":23,"line":15},"start":{"column":10,"line":15}},"mutatorName":"ConditionalExpression","replacement":"true","status":"Killed"},{"id":"10","location":{"end":{"column":2,"line":20},"start":{"column":35,"line":18}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"11","location":{"end":{"column":31,"line":19},"start":{"column":25,"line":19}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"12","location":{"end":{"column":2,"line":27},"start":{"column":18,"line":22}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"}],"source":"const model = require('./model');\n\nasync function findProducts () {\n  const products = await model.find({}, '-_id -__v');\n  return products;\n}\n\nasync function insertProduct (product) {\n  const newProduct = await model.create(product);\n  return newProduct;\n}\n\nasync function findProduct (id) {\n  const product = await model.find({ id }, '-_id -__v');\n  return product || {};\n}\n\nasync function deleteProduct (id) {\n  await model.deleteOne({ id });\n}\n\nmodule.exports = {\n  findProducts,\n  findProduct,\n  insertProduct,\n  deleteProduct\n};\n"},"/Users/alex/projects/own/node/product-api/app/product/router.js":{"language":"javascript","mutants":[{"id":"13","location":{"end":{"column":33,"line":1},"start":{"column":24,"line":1}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"15","location":{"end":{"column":41,"line":3},"start":{"column":28,"line":3}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"14","location":{"end":{"column":41,"line":2},"start":{"column":28,"line":2}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"16","location":{"end":{"column":47,"line":4},"start":{"column":27,"line":4}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"RuntimeError"},{"id":"17","location":{"end":{"column":34,"line":6},"start":{"column":24,"line":6}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"18","location":{"end":{"column":15,"line":8},"start":{"column":12,"line":8}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"20","location":{"end":{"column":18,"line":13},"start":{"column":12,"line":13}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"22","location":{"end":{"column":6,"line":19},"start":{"column":3,"line":19}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Survived"},{"id":"23","location":{"end":{"column":4,"line":22},"start":{"column":13,"line":20}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"24","location":{"end":{"column":36,"line":21},"start":{"column":12,"line":21}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"25","location":{"end":{"column":34,"line":21},"start":{"column":21,"line":21}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"19","location":{"end":{"column":2,"line":11},"start":{"column":37,"line":8}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"21","location":{"end":{"column":2,"line":16},"start":{"column":40,"line":13}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"29","location":{"end":{"column":9,"line":35},"start":{"column":3,"line":35}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"30","location":{"end":{"column":4,"line":38},"start":{"column":13,"line":36}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"31","location":{"end":{"column":36,"line":37},"start":{"column":12,"line":37}},"mutatorName":"ObjectLiteral","replacement":"{}","status":"Killed"},{"id":"32","location":{"end":{"column":34,"line":37},"start":{"column":21,"line":37}},"mutatorName":"StringLiteral","replacement":"\"\"","status":"Killed"},{"id":"26","location":{"end":{"column":4,"line":31},"start":{"column":23,"line":24}},"mutatorName":"Block","replacement":"{}","status":"Timeout"},{"id":"27","location":{"end":{"column":6,"line":28},"start":{"column":9,"line":25}},"mutatorName":"Block","replacement":"{}","status":"Timeout"},{"id":"28","location":{"end":{"column":6,"line":30},"start":{"column":21,"line":28}},"mutatorName":"Block","replacement":"{}","status":"Killed"},{"id":"33","location":{"end":{"column":4,"line":42},"start":{"column":23,"line":39}},"mutatorName":"Block","replacement":"{}","status":"Killed"}],"source":"const router = require('express').Router();\nconst httpStatus = require('http-status');\nconst bodyParser = require('body-parser');\nconst basicAuth = require('express-basic-auth');\n\nconst domain = require('./domain');\n\nrouter.get('/', async (req, res) => {\n  const products = await domain.findProducts();\n  res.status(httpStatus.OK).send(products);\n});\n\nrouter.get('/:id', async (req, res) => {\n  const product = await domain.findProduct(req.params.id);\n  res.status(httpStatus.OK).send(product);\n});\n\nrouter.post(\n  '/',\n  basicAuth({\n    users: { admin: 'supersecret' }\n  }),\n  bodyParser.json(),\n  async (req, res) => {\n    try {\n      const product = await domain.insertProduct(req.body);\n      res.status(httpStatus.CREATED).send(product);\n    } catch (error) {\n      res.status(httpStatus.INTERNAL_SERVER_ERROR).send(error);\n    }\n  }\n);\n\nrouter.delete(\n  '/:id',\n  basicAuth({\n    users: { admin: 'supersecret' }\n  }),\n  async (req, res) => {\n    await domain.deleteProduct(req.params.id);\n    res.status(httpStatus.OK).send();\n  }\n);\n\nmodule.exports = router;\n"}},"schemaVersion":"1.0","thresholds":{"break":null,"high":80,"low":60}};